library(tcR)
?parse.file
# This installs packages from BioConductor
# source("https://bioconductor.org/biocLite.R")
# biocLite("powerTCR")
library(powerTCR)
data("repertoires")
str(repertoires)
# This will loop through our list of sample repertoires,
# and store a fit in each
fits <- list()
for(i in 1:length(repertoires)){
# Choose a sequence of possible u for your model fit
# Ideally, you want to search a lot of thresholds, but for quick
# computation, we are only going to test 4
thresholds <- unique(quantile(repertoires[[i]], c(.75,.8,.85,.9)))
fits[[i]] <- fdiscgammagpd(repertoires[[i]], useq = thresholds,
shift = min(repertoires[[i]]))
}
names(fits) <- names(repertoires)
# You could also look at the first sample by typing fits[[1]]
fits$samp1
library(powerTCR)
data("repertoires")
fits <- list()
for(i in 1:length(repertoires)){
# Choose a sequence of possible u for your model fit
# Ideally, you want to search a lot of thresholds, but for quick
# computation, we are only going to test 4
thresholds <- unique(quantile(repertoires[[i]], c(.75,.8,.85,.9)))
fits[[i]] <- fdiscgammagpd(repertoires[[i]], useq = thresholds,
shift = min(repertoires[[i]]))
}
names(fits) <- names(repertoires)
# You could also look at the first sample by typing fits[[1]]
fits$samp1
fits$samp1
n1 <- length(repertoires[[1]])
n2 <- length(repertoires[[2]])
# Grids of quantiles to check
# (you want the same number of points as were observed in the sample)
q1 <- seq(n1/(n1+1), 1/(n1+1), length.out = n1)
q2 <- seq(n2/(n2+1), 1/(n2+1), length.out = n2)
# Compute the value of fitted distributions at grid of quantiles
theor1 <- qdiscgammagpd(q1, fits[[1]]$mle['shape'], fits[[1]]$mle['rate'],
fits[[1]]$mle['thresh'], fits[[1]]$mle['sigma'],
fits[[1]]$mle['xi'], fits[[1]]$mle['phi'],
min(fits[[1]]$x))
theor2 <- qdiscgammagpd(q2, fits[[2]]$mle['shape'], fits[[2]]$mle['rate'],
fits[[2]]$mle['thresh'], fits[[2]]$mle['sigma'],
fits[[2]]$mle['xi'], fits[[2]]$mle['phi'],
min(fits[[2]]$x))
plot(theor1, fits[[1]]$x)
plot(log(theor1), log(fits[[1]]$x))
plot(log(theor2), log(fits[[2]]$x))
plot(log(theor1), log(fits[[1]]$x))
abline(x=x)
abline(a=c(0,0), b=c(10,10))
abline(a=c(0,1), b=c(10,11))
?abline
abline(a=1,b=1)
abline(a=-1,b=1)
abline(a=0,b=1)
abline(a=0,b=1)
?qqgamm
?qqnorm
